// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Vannon.Teste.WebApp.Infrastructure.Contexts;

namespace Vannon.Teste.WebApp.Infrastructure.Migrations
{
    [DbContext(typeof(MainContext))]
    partial class MainContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.ClienteModel", b =>
                {
                    b.Property<long>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.FilmeModel", b =>
                {
                    b.Property<long>("IdFilme")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdGenero")
                        .HasColumnType("bigint");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdFilme");

                    b.HasIndex("IdGenero");

                    b.ToTable("Filmes");

                    b.HasData(
                        new
                        {
                            IdFilme = 1L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 647, DateTimeKind.Local).AddTicks(7803),
                            IdGenero = 3L,
                            Preco = 14.99,
                            Titulo = "Viuva Negra"
                        },
                        new
                        {
                            IdFilme = 2L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 647, DateTimeKind.Local).AddTicks(8648),
                            IdGenero = 2L,
                            Preco = 19.989999999999998,
                            Titulo = "Space Jam: Um Novo Legado"
                        });
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.GeneroModel", b =>
                {
                    b.Property<long>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenero");

                    b.ToTable("Generos");

                    b.HasData(
                        new
                        {
                            IdGenero = 1L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 644, DateTimeKind.Local).AddTicks(5071),
                            Descricao = "Terror"
                        },
                        new
                        {
                            IdGenero = 2L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 645, DateTimeKind.Local).AddTicks(8390),
                            Descricao = "Comedia"
                        },
                        new
                        {
                            IdGenero = 3L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 645, DateTimeKind.Local).AddTicks(8418),
                            Descricao = "Acao"
                        },
                        new
                        {
                            IdGenero = 4L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 645, DateTimeKind.Local).AddTicks(8421),
                            Descricao = "Drama"
                        });
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.LocacaoModel", b =>
                {
                    b.Property<long>("IdLocacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.HasKey("IdLocacao");

                    b.HasIndex("IdCliente");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.ReservaModel", b =>
                {
                    b.Property<long>("IdFilme")
                        .HasColumnType("bigint");

                    b.Property<long>("IdCliente")
                        .HasColumnType("bigint");

                    b.HasKey("IdFilme", "IdCliente");

                    b.HasIndex("IdCliente");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.UsuarioModel", b =>
                {
                    b.Property<long>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1L,
                            DataCriacao = new DateTime(2021, 7, 22, 4, 9, 25, 647, DateTimeKind.Local).AddTicks(4187),
                            Login = "admin@admin.com",
                            Nome = "Administrador",
                            Senha = "admin"
                        });
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.FilmeModel", b =>
                {
                    b.HasOne("Vannon.Teste.WebApp.Domain.Models.GeneroModel", "Genero")
                        .WithMany("Filmes")
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.LocacaoModel", b =>
                {
                    b.HasOne("Vannon.Teste.WebApp.Domain.Models.ClienteModel", "Cliente")
                        .WithMany("Locacoes")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.ReservaModel", b =>
                {
                    b.HasOne("Vannon.Teste.WebApp.Domain.Models.ClienteModel", "Cliente")
                        .WithMany("Reservas")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vannon.Teste.WebApp.Domain.Models.FilmeModel", "Filme")
                        .WithMany("Reservas")
                        .HasForeignKey("IdFilme")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Filme");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.ClienteModel", b =>
                {
                    b.Navigation("Locacoes");

                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.FilmeModel", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("Vannon.Teste.WebApp.Domain.Models.GeneroModel", b =>
                {
                    b.Navigation("Filmes");
                });
#pragma warning restore 612, 618
        }
    }
}
